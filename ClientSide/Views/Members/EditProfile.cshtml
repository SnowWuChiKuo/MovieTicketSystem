@model ClientSide.Models.ViewModels.ProfileVm

@{
    ViewBag.Title = "個人資料編輯";
}

<style>
    /* 主標題樣式 */
    .edit-title{
        font-size: 2.5rem;
        font-weight: 600;
        color: var(--accent-color);
        margin-bottom: 2rem;
        font-family: 'Lexend Deca', 'Noto Sans TC', sans-serif !important;
        text-align: center;
    }

    /* 表單卡片樣式 */
    .edit-card {
        border: 1px solid var(--border-color);
        border-radius: 12px;
        background: var(--secondary-bg);
        padding: 2rem;
        margin: 20px 0;
        box-shadow: 0 2px 12px rgba(0, 0, 0, 0.1);
    }
    .account {
        font-family: 'Lexend Deca', 'Noto Sans TC', sans-serif !important;
    }
    /* 表單群組樣式 */
    .form-group {
        margin-bottom: 1.5rem;
    }

    /* 標籤樣式 */
    .form-label {
        font-weight: 500;
        color: var(--accent-color);
        font-size: 1.1rem;
        margin-bottom: 0.5rem;
        font-family: 'Lexend Deca', 'Noto Sans TC', sans-serif !important;
    }

    /* 輸入框樣式 */
    .form-control {
        font-family: 'Lexend Deca', 'Noto Sans TC', sans-serif !important;
        border: 1px solid var(--border-color);
        border-radius: 6px;
        padding: 0.5rem 1rem;
        font-size: 1rem;
        color: var(--text-primary);
        background-color: var(--secondary-bg);
    }

    .form-control:focus {
        border-color: var(--accent-color);
        box-shadow: 0 0 0 0.2rem rgba(224, 169, 109, 0.25);
    }

    /* 按鈕樣式 */
    .btn {
        font-family: 'Lexend Deca', 'Noto Sans TC', sans-serif !important;
        transition: all 0.3s ease;
        font-weight: 500;
        padding: 0.5rem 1.5rem;
        border-radius: 6px;
        font-size: 1rem;
    }

    /* 取消會員區塊樣式 */
    .delete-section {
        margin-top: 3rem;
        padding-top: 2rem;
        border-top: 1px solid var(--border-color);
    }

    .delete-section label {
        color: var(--text-primary);
        font-weight: 500;
    }

    /* 按鈕樣式調整 */
    .btn-primary {
        background-color: var(--accent-color);
        border-color: var(--accent-color);
        color: white;
    }

    .btn-primary:hover {
        background-color: #c89b69;
        border-color: #c89b69;
        transform: translateY(-2px);
    }

    .btn-secondary {
        background-color: var(--secondary-bg);
        border: 1px solid var(--border-color);
        color: var(--text-primary);
    }

    .btn-secondary:hover {
        border-color: var(--accent-color);
        color: var(--accent-color);
        transform: translateY(-2px);
    }

    .btn-danger {
        background-color: var(--secondary-bg);
        border: 1px solid #dc3545;
        color: #dc3545;
    }

    .btn-danger:hover {
        background-color: #dc3545;
        border-color: #dc3545;
        color: white;
        transform: translateY(-2px);
    }
</style>

<div class="container" style="margin-bottom:200px; margin-top:80px;">
    <div class="edit-card">
        <h2 class="edit-title">個人資料編輯</h2>
        @using (Html.BeginForm("EditProfile", "Members", FormMethod.Post, new { id = "editForm" }))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="mb-3 account">
                    @Html.LabelFor(model => model.Account, htmlAttributes: new { @class = "form-label col-md-2" })
                    @Model.Account
                </div>

                <div class="mb-3">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "form-label col-md-2" })
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>

                <div class="mb-3">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "form-label col-md-2" })
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>

                <div class="mb-3">
                    <input type="submit" value="儲存" class="btn btn-primary btn-sm" />
                    @Html.ActionLink("回會員中心", "Index", null, new { @class = "btn btn-sm btn-secondary" })
                </div>
            </div>
        }

        @using (Html.BeginForm("DeleteMember", "Members", FormMethod.Post, new { id = "deleteForm" }))
        {
            @Html.AntiForgeryToken()
            <div class="mb-3 mt-5 container delete-section">
                <div class="row align-items-center">
                    <div class="col-auto">
                        <label class="fw-bolder">
                            確認是否要取消會員身分?
                            @Html.CheckBoxFor(model => model.IsDeleted, new { @class = "align-middle" })
                        </label>
                    </div>
                    <div class="col-auto">
                        <input type="submit" value="取消會員" class="btn btn-danger btn-sm" />
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @if (TempData.Peek("ShowSuccessAlert") != null && (bool)TempData.Peek("ShowSuccessAlert") == true)
    {
        <script>
            $(function () {
                Swal.fire({
                    title: '個人資料編輯成功',
                    text: '您的個人資料已成功更新。',
                    icon: 'success',
                    confirmButtonText: '確認'
                }).then((result) => {
                    if (result.isConfirmed) {
                        window.location.href = '@Url.Action("EditProfile", "Members")';
                    }
                })
            });
        </script>
        TempData.Remove("ShowSuccessAlert");
    }
    @if (TempData.Peek("SweetAlertTitle") != null)
    {
        <script>
            $(function () {
                Swal.fire({
                    title: '@TempData.Peek("SweetAlertTitle")',
                    text: '@TempData.Peek("SweetAlertText")',
                    icon: '@TempData.Peek("SweetAlertIcon")',
                    confirmButtonText: '確認'
                }).then((result) => {
                    if (result.isConfirmed) {
                        @if(TempData.Peek("SweetAlertTitle").ToString() == "會員資料已取消")
                        {
                            @:window.location.href = '@Url.Action("Logout", "Members")';
                        }
                        else
                        {
                            @:window.location.href = '@Url.Action("EditProfile", "Members")';
                        }
                    }
                })
            });
        </script>
        TempData.Remove("SweetAlertTitle");
        TempData.Remove("SweetAlertText");
        TempData.Remove("SweetAlertIcon");
    }
    <script>
        $(function () {
            $('#deleteForm').submit(function (e) {
                var isDeletedChecked = $('#IsDeleted').is(':checked');
                if (isDeletedChecked) {
                    e.preventDefault();
                    Swal.fire({
                        title: '確認取消會員身分',
                        text: '您確定要取消您的會員身分嗎？',
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonText: '是的，取消會員',
                        cancelButtonText: '取消'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            this.submit();
                        }
                    });
                }
            });
        });
    </script>
}
