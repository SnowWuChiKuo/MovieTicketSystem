@model ClientSide.Models.ViewModels.ResetPasswordVm

@{
    ViewBag.Title = "重設密碼";
}

<h2 class="fw-bolder mb-4">重設密碼</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group mb-3">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
        </div>

        <div class="form-group mb-3">
            @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
            @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
        </div>

        <div class="form-group ">
            <input type="submit" value="確認" class="btn btn-primary btn-sm" id="submitBtn" />
        </div>
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        document.getElementById('submitBtn').addEventListener('click', function (event) {
            event.preventDefault(); // 防止表單立即提交

            Swal.fire({
                icon: 'success',
                title: '密碼重設成功',
                text: '您的密碼已成功重設，即將跳轉到登入頁面。',
                confirmButtonText: '確定',
                confirmButtonColor: '#28a745',
                allowOutsideClick: false,
                allowEscapeKey: false
            }).then((result) => {
                if (result.isConfirmed) {
                    event.target.closest('form').submit(); // 再次提交表單
                }
            });
        });
    </script>
}