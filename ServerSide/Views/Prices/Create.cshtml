@model ServerSide.Models.ViewModels.PriceVm

@{
    ViewData["Title"] = "新增票券";
}

<div class="container-fluid">
    <h1 class="fw-bolder mb-3 mx-5">新增票券</h1>
    <div class="card m-5">
        <div class="card-body">
            <div class="col-md-12">
                <form asp-action="Create">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <div class="mb-3">
                        <label asp-for="MovieId" class="form-label"></label>
                        <input asp-for="MovieId" class="form-control" readonly hidden />
                        <input type="text" class="form-control" value="@ViewBag.MovieIdAndTitle" readonly />
                        <span asp-validation-for="MovieId" class="text-danger"></span>
                    </div>



                    <div class="mb-3">
                        <label asp-for="SalesType" class="form-label"></label>
                        <select asp-for="SalesType" asp-items="Model.SalesTypeItem" class="custom-select">
                            <option value="">請選擇票券時段/套票</option>
                        </select>
                        <span asp-validation-for="SalesType" class="text-danger"></span>
                    </div>
                    <div class="mb-3">
                        <label asp-for="TicketType" class="form-label"></label>
                        <select asp-for="TicketType" asp-items="Model.TicketTypeOption" class="custom-select">
                            <option value="">請選擇票券對象</option>
                        </select>
                        <span asp-validation-for="TicketType" class="text-danger"></span>
                    </div>
                    <div class="mb-3">
                        <label asp-for="ReservedSeats" class="form-label"></label>
                        <input asp-for="ReservedSeats" class="form-control" />
                        <span asp-validation-for="ReservedSeats" class="text-danger"></span>
                    </div>
                    <div class="mb-3">
                        <label asp-for="PriceOfTicket" class="form-label"></label>
                        <input asp-for="PriceOfTicket" class="form-control" />
                        <span asp-validation-for="PriceOfTicket" class="text-danger"></span>
                    </div>
                    <div class="mb-3">
                        <a asp-action="Index" class="btn btn-secondary me-4">回到票券清單</a>
                        @* <input type="submit" value="確認新增" class="btn btn-primary" /> *@
                        <input type="button" value="確認新增" class="btn btn-primary" onclick="confirmCreate()" />
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}


<script>
    function confirmCreate() {
        Swal.fire({
            title: "確定要新增嗎？",
            text: "請確認輸入內容無誤",
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            confirmButtonText: "是的，新增！",
            cancelButtonText: "取消"
        }).then((result) => {
            if (result.isConfirmed) {
                document.querySelector('form').submit();
            }
        });
    }

    function createItem() {
        const form = document.querySelector('form');
        const formData = new FormData(form);
        const data = {};
        formData.forEach((value, key) => {
            data[key] = value;
        });

        fetch(form.action, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
            },
            body: JSON.stringify(data)
        })
            .then(response => {
                if (response.ok) {
                    Swal.fire({
                        title: "已新增！",
                        text: "電影已成功新增。",
                        icon: "success"
                    }).then(() => {
                        window.location.href = '/Prices/Details';
                    });
                } else {
                    Swal.fire({
                        title: "新增失敗！",
                        text: "請稍後再試。",
                        icon: "error"
                    });
                }
            })
            .catch(error => {
                Swal.fire({
                    title: "錯誤！",
                    text: "無法連接到伺服器。",
                    icon: "error"
                });
            });
    }
</script>