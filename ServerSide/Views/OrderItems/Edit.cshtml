@model ServerSide.Models.ViewModels.OrderItemVm

@{
    ViewData["Title"] = "編輯電影訂單細項";
}

<div class="container">

    <h1 class="fw-bolder">編輯電影訂單細項</h1>

    <div class="row">
        <div class="col-md-4">
            <form asp-action="Edit">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="mb-3">
                    <label asp-for="OrderId" class="form-label"></label>
                    <input asp-for="OrderId" class="form-control form-control-sm" />
                    <span asp-validation-for="OrderId" class="text-danger"></span>
                </div>
                <div class="mb-3">
                    <label asp-for="TicketId" class="form-label"></label>
                    <input asp-for="TicketId" class="form-control form-control-sm" id="TicketId" />
                    <span asp-validation-for="TicketId" class="text-danger"></span>
                </div>
                <div class="mb-3">
                    <label asp-for="TicketName" class="form-label"></label>
                    <input asp-for="TicketName" class="form-control form-control-sm no-border" id="TicketName" readonly />
                    <span asp-validation-for="TicketName" class="text-danger"></span>
                </div>
                <div class="mb-3">
                    <label asp-for="Price" class="form-label"></label>
                    <input asp-for="Price" class="form-control form-control-sm no-border" id="price" readonly />
                    <span asp-validation-for="Price" class="text-danger"></span>
                </div>
                <div class="mb-3">
                    <label asp-for="Qty" class="form-label"></label>
                    <input asp-for="Qty" class="form-control form-control-sm" id="qty" />
                    <span asp-validation-for="Qty" class="text-danger"></span>
                </div>
                <div class="mb-3">
                    <label asp-for="SubTotal" class="form-label"></label>
                    <input asp-for="SubTotal" class="form-control form-control-sm no-border" id="subTotal" readonly />
                    <span asp-validation-for="SubTotal" class="text-danger"></span>
                </div>
                <div class="mb-3">
                    <input type="submit" value="更新" class="btn btn-primary btn-sm" />
                    <input type="button" value="刪除" class="btn btn-danger btn-sm" onclick="confirmDelete()" />
                    <a asp-action="Index" class="btn btn-sm btn-secondary">回清單頁</a>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
    $(document).ready(function () {
        $('#TicketId').change(function () {
            var ticketId = $(this).val();
            $.ajax({
                url: '/OrderItems/GetTicketName',
                type: 'GET',
                data: { ticketId: ticketId },
                success: function (response) {
                    $('#TicketName').val(response.data.ticketType);
                    $('#price').val(response.data.price);
                    calculateSubTotal(); // 更新總價
                },
                error: function (error) {
                    console.error('Error:', error);
                }
            });
        });

        function calculateSubTotal() {
            var price = parseFloat($('#price').val()) || 0;
            var qty = parseInt($('#qty').val()) || 0;
            var subTotal = price * qty;
            $('#subTotal').val(subTotal);
        }

        $('#qty').change(function () {
            calculateSubTotal();
        });

            calculateSubTotal();
        });
    
        function confirmDelete() {
        Swal.fire({
            title: "確定要刪除嗎？",
            text: "刪除後將無法恢復！",
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            confirmButtonText: "是的，刪除！",
            cancelButtonText: "取消"
        }).then((result) => {
            if (result.isConfirmed) {
                deleteItem();
            }
        });
    }

    function deleteItem() {
        const id = document.querySelector('input[name="OrderId"]').value;
        fetch(`/OrderItems/Delete/${id}`, {
            method: 'GET',
            headers: {
                'Content-Type': 'application/json',
                'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
            }
        })
        .then(response => {
            if (response.ok) {
                Swal.fire({
                    title: "已刪除！",
                    text: "票種已成功刪除。",
                    icon: "success"
                }).then(() => {
                    window.location.href = '/OrderItems/Index';
                });
            } else {
                Swal.fire({
                    title: "刪除失敗！",
                    text: "請稍後再試。",
                    icon: "error"
                });
            }
        })
        .catch(error => {
            Swal.fire({
                title: "錯誤！",
                text: "無法連接到伺服器。",
                icon: "error"
            });
        });
    }
    </script>
}



