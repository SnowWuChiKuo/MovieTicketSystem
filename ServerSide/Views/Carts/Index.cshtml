@model IEnumerable<ServerSide.Models.ViewModels.CartVm>

@{
    ViewData["Title"] = "購物車資料維護";
}


<div class="container-fluid">

    <h1 class="fw-bolder mb-3">購物車資料維護</h1>
    <div class="d-flex justify-content-end mb-3">
        <a asp-action="Create" class="btn btn-lg btn-success">新增購物車</a>
    </div>
    <!-- DataTales Example -->
    <div class="card shadow mb-4">
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-bordered" id="myTable" width="100%" cellspacing="0">
                    <thead>
                        <tr>
                            <th>
                                @Html.DisplayNameFor(model => model.Id)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.MemberId)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.MemberAccount)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.MemberName)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.TotalPrice)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.CreatedAt)
                            </th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Id)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.MemberId)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.MemberAccount)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.MemberName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.TotalPrice)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.CreatedAt)
                                </td>
                                <td class="text-center">
                                    <input type="button" value="刪除" class="btn btn-danger btn-sm" onclick="confirmDelete(@item.Id)" />
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>

</div>
<form>
    @Html.AntiForgeryToken()
</form>

@section styles
{
    <!-- Custom styles for this page -->
    <link href="~/js/vendor/datatables/dataTables.bootstrap4.min.css" rel="stylesheet">
}

@section scripts
{
    <!-- jQuery -->
    <script src="~/js/vendor/jquery/jquery.min.js"></script>

    <!-- Bootstrap core JavaScript-->
    <script src="~/js/vendor/bootstrap/js/bootstrap.bundle.min.js"></script>

    <!-- Core plugin JavaScript-->
    <script src="~/js/vendor/jquery-easing/jquery.easing.min.js"></script>


    <!-- Page level plugins -->
    <script src="~/js/vendor/datatables/jquery.dataTables.min.js"></script>
    <script src="~/js/vendor/datatables/dataTables.bootstrap4.min.js"></script>

    <!-- Page level custom scripts -->
    <script src="~/js/js/demo/datatables-demo.js"></script>
    <script>
         var deleteCartId ;

        //初始化DataTable套件 設置屬性、id對應body裡Table的id
         $(document).ready(function () {
           $('#myTable').DataTable({
               "paging": true,
               "lengthChange": true,
                "ordering": true,
              "info": true,
              "autoWidth": false,
                "language":
               {
                  "lengthMenu": "每頁顯示筆數 _MENU_ ",
                  "zeroRecords": "沒有找到對應的資料",
                 "info": "顯示第 _START_ 到 _END_ 筆，共 _TOTAL_ 筆",
                   "infoEmpty": "顯示第 0 到 0 筆，共 0 筆",
                 "infoFiltered": "(從 _MAX_ 筆資料中過濾)",
                   "paginate":
                    {
                       "previous": "上一頁",
                       "next": "下一頁"
                   }
              }
           });

              $('#myTable_filter').hide();
        });
         function confirmDelete(id) {
            deleteCartId = id
            Swal.fire({
                title: "確定要刪除嗎？",
                 text: "刪除後將無法恢復！",
               icon: "warning",
                 showCancelButton: true,
                confirmButtonColor: "#3085d6",
               cancelButtonColor: "#d33",
               confirmButtonText: "是的，刪除！",
               cancelButtonText: "取消"
           }).then((result) => {
                 if (result.isConfirmed) {
                   deleteItem();
                }
            });
        }
        function deleteItem() {
            fetch(`/Carts/Delete/${deleteCartId}`, {
               method: 'GET',
                headers: {
                    'Content-Type': 'application/json',
                   'RequestVerificationToken': $('form input[name="__RequestVerificationToken"]').val()
               }
            })
               .then(response => {
                    if (response.ok) {
                       Swal.fire({
                            title: "已刪除！",
                           text: "座位已成功刪除。",
                            icon: "success"
                       }).then(() => {
                           window.location.href = '/Carts/Index';
                      });
                   } else {
                         Swal.fire({
                             title: "刪除失敗！",
                           text: "請稍後再試。",
                            icon: "error"
                        });
                    }
               })
             .catch(error => {
                Swal.fire({
                        title: "錯誤！",
                        text: "無法連接到伺服器。",
                        icon: "error"
                 });
               });
           }
    </script>
}