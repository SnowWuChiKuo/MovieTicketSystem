@model ServerSide.Models.ViewModels.ReviewVm

@{
    ViewData["Title"] = "評論編輯";
}


<div class="container-fluid">
    <h1 class="fw-bolder mx-5">評論編輯</h1>
    <div class="card m-5">
        <div class="card-body">
            <div class="row mx-5">
                <div class="col-md-12">
                    <form asp-action="Edit">
                        @Html.AntiForgeryToken()
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                        <input type="hidden" asp-for="Id" />
                        <input type="hidden" asp-for="MemberId" />
                        <input type="hidden" asp-for="MovieId" />

                        @* 顯示會員名稱 *@
                        <div class="mb-3">
                            <label asp-for="MemberAccount" class="form-label"></label>
                            <p class="form-control-plaintext">@Model.MemberAccount</p>
                        </div>

                        @* 顯示電影名稱 *@
                        <div class="mb-3">
                            <label asp-for="MovieTitle" class="form-label"></label>
                            <p class="form-control-plaintext">@Model.MovieTitle</p>
                        </div>

                        <div class="mb-3">
                            <label asp-for="Rating" class="form-label"></label>
                            <input asp-for="Rating" class="form-control" />
                            <span asp-validation-for="Rating" class="text-danger"></span>
                        </div>
                        <div class="mb-3">
                            <label asp-for="Comment" class="form-label"></label>
                            <input asp-for="Comment" class="form-control" />
                            <span asp-validation-for="Comment" class="text-danger"></span>
                        </div>
                        <div class="mb-3">
                            <a asp-action="Index" class="btn btn-secondary me-4">回到電影清單</a>
                            <input type="submit" value="保存變更" class="btn btn-primary me-4" />
                            <input type="button" value="刪除" class="btn btn-danger" onclick="confirmDelete()" />
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

<script>
    function confirmDelete() {
        Swal.fire({
            title: "確定要刪除嗎？",
            text: "刪除後將無法恢復！",
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            confirmButtonText: "是的，刪除！",
            cancelButtonText: "取消"
        }).then((result) => {
            if (result.isConfirmed) {
                deleteItem();
            }
        });
    }

    function deleteItem() {
        const id = document.querySelector('input[name="Id"]').value;
        fetch(`/Reviews/Delete/${id}`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
            }
        })
            .then(response => {
                if (response.ok) {
                    Swal.fire({
                        title: "已刪除！",
                        text: "評論已成功刪除。",
                        icon: "success"
                    }).then(() => {
                        window.location.href = '/Reviews/Index';
                    });
                } else {
                    Swal.fire({
                        title: "刪除失敗！",
                        text: "請稍後再試。",
                        icon: "error"
                    });
                }
            })
            .catch(error => {
                Swal.fire({
                    title: "錯誤！",
                    text: "無法連接到伺服器。",
                    icon: "error"
                });
            });
    }
</script>